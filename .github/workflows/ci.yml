name: 🧪 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: 🧪 Run tests
      run: |
        cd backend
        npm test
      env:
        NODE_ENV: test
        
    - name: 📊 Generate coverage report
      run: |
        cd backend
        npm run test:coverage
        
    - name: 📤 Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  lint:
    name: 🔍 Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: 🔍 Run ESLint
      run: |
        cd backend
        npx eslint src/ --ext .js
        
    - name: 🎨 Check code formatting
      run: |
        cd backend
        npx prettier --check src/

  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: |
        cd backend
        npm ci
        
    - name: 🔒 Run security audit
      run: |
        cd backend
        npm audit --audit-level moderate
        
    - name: 🔍 Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  build:
    name: 🏗️ Build Project
    runs-on: ubuntu-latest
    needs: [test, lint, security]
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: |
        npm run install:all
        
    - name: 🏗️ Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: 📦 Build Docker images
      run: |
        docker build -t vox-ai-chatbot-backend ./backend
        docker build -t vox-ai-chatbot-frontend ./frontend
        
    - name: 🐳 Test Docker Compose
      run: |
        docker-compose config

  deploy:
    name: 🚀 Deploy (if main branch)
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🚀 Deploy to production
      run: |
        echo "Deployment would happen here"
        # Add your deployment logic here